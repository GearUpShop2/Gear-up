{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orange\\\\Desktop\\\\Gear-Up\\\\Client\\\\src\\\\context\\\\AmountContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AmountContext = /*#__PURE__*/createContext();\nexport const AmountProvider = ({\n  children\n}) => {\n  _s();\n  const [amount, setAmount] = useState(0);\n  const updateAmount = newAmount => {\n    setAmount(newAmount);\n  };\n  return /*#__PURE__*/_jsxDEV(AmountContext.Provider, {\n    value: {\n      amount,\n      updateAmount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(AmountProvider, \"2TMrQR5sfTnOIRFQ/IGkRsacY78=\");\n_c = AmountProvider;\nexport const useAmount = () => {\n  _s2();\n  const context = useContext(AmountContext);\n  if (!context) {\n    throw new Error('useAmount must be used within an AmountProvider');\n  }\n  return context;\n};\n_s2(useAmount, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AmountProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","AmountContext","AmountProvider","children","_s","amount","setAmount","updateAmount","newAmount","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAmount","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Orange/Desktop/Gear-Up/Client/src/context/AmountContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\nconst AmountContext = createContext();\r\n\r\nexport const AmountProvider = ({ children }) => {\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const updateAmount = (newAmount) => {\r\n    setAmount(newAmount);\r\n  };\r\n\r\n  return (\r\n    <AmountContext.Provider value={{ amount, updateAmount }}>\r\n      {children}\r\n    </AmountContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAmount = () => {\r\n  const context = useContext(AmountContext);\r\n  if (!context) {\r\n    throw new Error('useAmount must be used within an AmountProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMM,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAMS,YAAY,GAAIC,SAAS,IAAK;IAClCF,SAAS,CAACE,SAAS,CAAC;EACtB,CAAC;EAED,oBACER,OAAA,CAACC,aAAa,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,MAAM;MAAEE;IAAa,CAAE;IAAAJ,QAAA,EACrDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACV,EAAA,CAZWF,cAAc;AAAAa,EAAA,GAAdb,cAAc;AAc3B,OAAO,MAAMc,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAMC,OAAO,GAAGrB,UAAU,CAACI,aAAa,CAAC;EACzC,IAAI,CAACiB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;EACpE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,SAAS;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}